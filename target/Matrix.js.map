{"version":3,"sources":["../src/Matrix.js"],"names":["Matrix","elements","setElements","i","j","length","Vector","col","n","push","cols","rows","matrix","M","nj","Math","abs","PRECISION","fn","context","els","call","map","x","isSameSizeAs","returnVector","modulus","canMultiplyFromLeft","c","sum","a","b","d","ni","m","index","isSquare","dup","np","p","multiplier","toRightTriangular","det","determinant","tr","rank","T","isSingular","augment","I","divisor","inverse_elements","new_element","round","matrix_rows","inspect","join","result","Diagonal","Rotation","theta","cos","sin","axis","mod","y","z","s","t","RotationX","RotationY","RotationZ","Random","Zero","random","Translation","v","r","prototype","toUpperTriangular","trace","rk","inv","inverse","multiply"],"mappings":"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","file":"Matrix.js","sourcesContent":["\"use strict\";\n\nimport { PRECISION } from \"./PRECISION\";\nimport { Vector } from \"./Vector\";\n\nexport class Matrix\n{\n    constructor (elements)\n    {\n        this.setElements(elements);\n    }\n\n    e (i,j)\n    {\n        if (i < 1 || i > this.elements.length || j < 1 || j > this.elements[0].length)\n        {\n            return null;\n        }\n        return this.elements[i-1][j-1];\n    }\n\n    row (i)\n    {\n        if (i > this.elements.length)\n        {\n            return null;\n        }\n        return new Vector(this.elements[i-1]);\n    }\n\n    col (j)\n    {\n        if (this.elements.length === 0)\n        {\n            return null;\n        }\n        if (j > this.elements[0].length)\n        {\n            return null;\n        }\n        var col = [], n = this.elements.length;\n        for (var i = 0; i < n; i++)\n        {\n            col.push(this.elements[i][j-1]);\n        }\n        return new Vector(col);\n    }\n\n    dimensions ()\n    {\n        var cols = (this.elements.length === 0) ? 0 : this.elements[0].length;\n        return {rows: this.elements.length, cols: cols};\n    }\n\n    rows ()\n    {\n        return this.elements.length;\n    }\n\n    cols ()\n    {\n        if (this.elements.length === 0)\n        {\n            return 0;\n        }\n        return this.elements[0].length;\n    }\n\n    eql (matrix)\n    {\n        var M = matrix.elements || matrix;\n        if (!M[0] || typeof(M[0][0]) === 'undefined')\n        {\n            M = new Matrix(M).elements;\n        }\n        if (this.elements.length === 0 || M.length === 0)\n        {\n            return this.elements.length === M.length;\n        }\n        if (this.elements.length !== M.length)\n        {\n            return false;\n        }\n        if (this.elements[0].length !== M[0].length)\n        {\n            return false;\n        }\n        var i = this.elements.length, nj = this.elements[0].length, j;\n        while (i--)\n        {\n            j = nj;\n            while (j--)\n            {\n                if (Math.abs(this.elements[i][j] - M[i][j]) > PRECISION)\n                {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    dup ()\n    {\n        return new Matrix(this.elements);\n    }\n\n    map (fn, context)\n    {\n        if (this.elements.length === 0)\n        {\n            return new Matrix([]);\n        }\n        var els = [], i = this.elements.length, nj = this.elements[0].length, j;\n        while (i--)\n        {\n            j = nj;\n            els[i] = [];\n            while (j--)\n            {\n                els[i][j] = fn.call(context, this.elements[i][j], i + 1, j + 1);\n            }\n        }\n        return new Matrix(els);\n    }\n\n    isSameSizeAs (matrix)\n    {\n        var M = matrix.elements || matrix;\n        if (typeof(M[0][0]) === 'undefined')\n        {\n            M = new Matrix(M).elements;\n        }\n        if (this.elements.length === 0)\n        {\n            return M.length === 0;\n        }\n        return (this.elements.length === M.length && this.elements[0].length === M[0].length);\n    }\n\n    add (matrix)\n    {\n        if (this.elements.length === 0)\n        {\n            return this.map(function(x)\n                {\n                    return x\n                });\n        }\n        var M = matrix.elements || matrix;\n        if (typeof(M[0][0]) === 'undefined')\n        {\n            M = new Matrix(M).elements;\n        }\n        if (!this.isSameSizeAs(M))\n        {\n            return null;\n        }\n        return this.map(function(x, i, j)\n            {\n                return x + M[i-1][j-1];\n            });\n    }\n\n    subtract (matrix)\n    {\n        if (this.elements.length === 0)\n        {\n            return this.map(function(x)\n            {\n                return x;\n            });\n        }\n        var M = matrix.elements || matrix;\n        if (typeof(M[0][0]) === 'undefined')\n        {\n            M = new Matrix(M).elements;\n        }\n        if (!this.isSameSizeAs(M))\n        {\n            return null;\n        }\n        return this.map(function(x, i, j)\n            {\n                return x - M[i-1][j-1];\n            });\n    }\n\n    canMultiplyFromLeft (matrix)\n    {\n        if (this.elements.length === 0)\n        {\n            return false;\n        }\n        var M = matrix.elements || matrix;\n        if (typeof(M[0][0]) === 'undefined')\n        {\n            M = new Matrix(M).elements;\n        }\n        // this.columns should equal matrix.rows\n        return (this.elements[0].length === M.length);\n    }\n\n    multiply (matrix)\n    {\n        if (this.elements.length === 0)\n        {\n            return null;\n        }\n        if (!matrix.elements)\n        {\n            return this.map(function(x)\n            {\n                return x * matrix;\n            });\n        }\n        var returnVector = matrix.modulus ? true : false;\n        var M = matrix.elements || matrix;\n        if (typeof(M[0][0]) === 'undefined')\n        {\n            M = new Matrix(M).elements;\n        }\n        if (!this.canMultiplyFromLeft(M))\n        {\n            return null;\n        }\n        var i = this.elements.length, nj = M[0].length, j;\n        var cols = this.elements[0].length, c, elements = [], sum;\n        while (i--)\n        {\n            j = nj;\n            elements[i] = [];\n            while (j--)\n            {\n                c = cols;\n                sum = 0;\n                while (c--)\n                {\n                    sum += this.elements[i][c] * M[c][j];\n                }\n                elements[i][j] = sum;\n            }\n        }\n        var M = new Matrix(elements);\n        return returnVector ? M.col(1) : M;\n    }\n\n    minor (a, b, c, d)\n    {\n        if (this.elements.length === 0)\n        {\n            return null;\n        }\n        var elements = [], ni = c, i, nj, j;\n        var rows = this.elements.length, cols = this.elements[0].length;\n        while (ni--)\n        {\n            i = c - ni - 1;\n            elements[i] = [];\n            nj = d;\n            while (nj--)\n            {\n                j = d - nj - 1;\n                elements[i][j] = this.elements[(a+i-1)%rows][(b+j-1)%cols];\n            }\n        }\n        return new Matrix(elements);\n    }\n\n    transpose ()\n    {\n        if (this.elements.length === 0)\n        {\n            return new Matrix([]);\n        }\n        var rows = this.elements.length, i, cols = this.elements[0].length, j;\n        var elements = [], i = cols;\n        while (i--)\n        {\n            j = rows;\n            elements[i] = [];\n            while (j--)\n            {\n                elements[i][j] = this.elements[j][i];\n            }\n        }\n        return new Matrix(elements);\n    }\n\n    isSquare ()\n    {\n        var cols = (this.elements.length === 0) ? 0 : this.elements[0].length;\n        return (this.elements.length === cols);\n    }\n\n    max ()\n    {\n        if (this.elements.length === 0)\n        {\n            return null;\n        }\n        var m = 0, i = this.elements.length, nj = this.elements[0].length, j;\n        while (i--)\n        {\n            j = nj;\n            while (j--)\n            {\n                if (Math.abs(this.elements[i][j]) > Math.abs(m))\n                {\n                    m = this.elements[i][j];\n                }\n            }\n        }\n        return m;\n    }\n\n    indexOf (x)\n    {\n        if (this.elements.length === 0)\n        {\n            return null;\n        }\n        var index = null, ni = this.elements.length, i, nj = this.elements[0].length, j;\n        for (i = 0; i < ni; i++)\n        {\n            for (j = 0; j < nj; j++)\n            {\n                if (this.elements[i][j] === x)\n                {\n                    return {\n                        i: i+1,\n                        j: j+1\n                    };\n                }\n            }\n        }\n        return null;\n    }\n\n    diagonal ()\n    {\n        if (!this.isSquare)\n        {\n            return null;\n        }\n        var els = [], n = this.elements.length;\n        for (var i = 0; i < n; i++)\n        {\n            els.push(this.elements[i][i]);\n        }\n        return new Vector(els);\n    }\n\n    toRightTriangular ()\n    {\n        if (this.elements.length === 0)\n        {\n            return new Matrix([]);\n        }\n        var M = this.dup(), els;\n        var n = this.elements.length, i, j, np = this.elements[0].length, p;\n        for (i = 0; i < n; i++)\n        {\n            if (M.elements[i][i] === 0)\n            {\n                for (j = i + 1; j < n; j++)\n                {\n                    if (M.elements[j][i] !== 0)\n                    {\n                        els = [];\n                        for (p = 0; p < np; p++)\n                        {\n                            els.push(M.elements[i][p] + M.elements[j][p]);\n                        }\n                        M.elements[i] = els;\n                        break;\n                    }\n                }\n            }\n            if (M.elements[i][i] !== 0)\n            {\n                for (j = i + 1; j < n; j++)\n                {\n                    var multiplier = M.elements[j][i] / M.elements[i][i];\n                    els = [];\n                    for (p = 0; p < np; p++)\n                    {\n                        // Elements with column numbers up to an including the number of the\n                        // row that we're subtracting can safely be set straight to zero,\n                        // since that's the point of this routine and it avoids having to\n                        // loop over and correct rounding errors later\n                        els.push(p <= i ? 0 : M.elements[j][p] - M.elements[i][p] * multiplier);\n                    }\n                    M.elements[j] = els;\n                }\n            }\n        }\n        return M;\n    }\n\n    determinant ()\n    {\n        if (this.elements.length === 0)\n        {\n            return 1;\n        }\n        if (!this.isSquare())\n        {\n            return null;\n        }\n        var M = this.toRightTriangular();\n        var det = M.elements[0][0], n = M.elements.length;\n        for (var i = 1; i < n; i++)\n        {\n            det = det * M.elements[i][i];\n        }\n        return det;\n    }\n\n    isSingular ()\n    {\n        return (this.isSquare() && this.determinant() === 0);\n    }\n\n    trace ()\n    {\n        if (this.elements.length === 0)\n        {\n            return 0;\n        }\n        if (!this.isSquare())\n        {\n            return null;\n        }\n        var tr = this.elements[0][0], n = this.elements.length;\n        for (var i = 1; i < n; i++)\n        {\n            tr += this.elements[i][i];\n        }\n        return tr;\n    }\n\n    rank ()\n    {\n        if (this.elements.length === 0)\n        {\n            return 0;\n        }\n        var M = this.toRightTriangular(), rank = 0;\n        var i = this.elements.length, nj = this.elements[0].length, j;\n        while (i--)\n        {\n            j = nj;\n            while (j--)\n            {\n                if (Math.abs(M.elements[i][j]) > PRECISION)\n                {\n                    rank++;\n                    break;\n                }\n            }\n        }\n        return rank;\n    }\n\n    augment (matrix)\n    {\n        if (this.elements.length === 0)\n        {\n            return this.dup();\n        }\n        var M = matrix.elements || matrix;\n        if (typeof(M[0][0]) === 'undefined')\n        {\n            M = new Matrix(M).elements;\n        }\n        var T = this.dup(), cols = T.elements[0].length;\n        var i = T.elements.length, nj = M[0].length, j;\n        if (i !== M.length)\n        {\n            return null;\n        }\n        while (i--)\n        {\n            j = nj;\n            while (j--)\n            {\n                T.elements[i][cols + j] = M[i][j];\n            }\n        }\n        return T;\n    }\n\n    inverse ()\n    {\n        if (this.elements.length === 0)\n        {\n            return null;\n        }\n        if (!this.isSquare() || this.isSingular())\n        {\n            return null;\n        }\n        var n = this.elements.length, i= n, j;\n        var M = this.augment(Matrix.I(n)).toRightTriangular();\n        var np = M.elements[0].length, p, els, divisor;\n        var inverse_elements = [], new_element;\n        // Matrix is non-singular so there will be no zeros on the\n        // diagonal. Cycle through rows from last to first.\n        while (i--)\n        {\n            // First, normalise diagonal elements to 1\n            els = [];\n            inverse_elements[i] = [];\n            divisor = M.elements[i][i];\n            for (p = 0; p < np; p++)\n            {\n                new_element = M.elements[i][p] / divisor;\n                els.push(new_element);\n                // Shuffle off the current row of the right hand side into the results\n                // array as it will not be modified by later runs through this loop\n                if (p >= n)\n                {\n                    inverse_elements[i].push(new_element);\n                }\n            }\n            M.elements[i] = els;\n            // Then, subtract this row from those above it to give the identity matrix\n            // on the left hand side\n            j = i;\n            while (j--)\n            {\n                els = [];\n                for (p = 0; p < np; p++)\n                {\n                    els.push(M.elements[j][p] - M.elements[i][p] * M.elements[j][i]);\n                }\n                M.elements[j] = els;\n            }\n        }\n        return new Matrix(inverse_elements);\n    }\n\n    round ()\n    {\n        return this.map(function(x)\n            {\n                return Math.round(x);\n            });\n    }\n\n    snapTo (x)\n    {\n        return this.map(function(p)\n            {\n                return (Math.abs(p - x) <= PRECISION) ? x : p;\n            });\n    }\n\n    inspect ()\n    {\n        var matrix_rows = [];\n        var n = this.elements.length;\n        if (n === 0) return '[]';\n        for (var i = 0; i < n; i++)\n        {\n            matrix_rows.push(new Vector(this.elements[i]).inspect());\n        }\n        return matrix_rows.join('\\n');\n    }\n\n    setElements (els)\n    {\n        var i, j, elements = els.elements || els;\n        if (elements[0] && typeof(elements[0][0]) !== 'undefined')\n        {\n            i = elements.length;\n            this.elements = [];\n            while (i--)\n            {\n                j = elements[i].length;\n                this.elements[i] = [];\n                while (j--)\n                {\n                    this.elements[i][j] = elements[i][j];\n                }\n            }\n            return this;\n        }\n        var n = elements.length;\n        this.elements = [];\n        for (i = 0; i < n; i++)\n        {\n            this.elements.push([elements[i]]);\n        }\n        return this;\n    }\n\n    //From glUtils.js\n    flatten ()\n    {\n        var result = [];\n        if (this.elements.length == 0)\n        {\n            return [];\n        }\n\n\n        for (var j = 0; j < this.elements[0].length; j++)\n        {\n            for (var i = 0; i < this.elements.length; i++)\n            {\n                result.push(this.elements[i][j]);\n            }\n        }\n        return result;\n    }\n\n    //From glUtils.js\n    ensure4x4 ()\n    {\n        if (this.elements.length == 4 && this.elements[0].length == 4)\n        {\n            return this;\n        }\n\n        if (this.elements.length > 4 || this.elements[0].length > 4)\n        {\n            return null;\n        }\n\n        for (var i = 0; i < this.elements.length; i++)\n        {\n            for (var j = this.elements[i].length; j < 4; j++)\n            {\n                if (i == j)\n                {\n                    this.elements[i].push(1);\n                }\n                else\n                {\n                    this.elements[i].push(0);\n                }\n            }\n        }\n\n        for (var i = this.elements.length; i < 4; i++)\n        {\n            if (i == 0)\n            {\n                this.elements.push([1, 0, 0, 0]);\n            }\n            else if (i == 1)\n            {\n                this.elements.push([0, 1, 0, 0]);\n            }\n            else if (i == 2)\n            {\n                this.elements.push([0, 0, 1, 0]);\n            }\n            else if (i == 3)\n            {\n                this.elements.push([0, 0, 0, 1]);\n            }\n        }\n\n        return this;\n    }\n\n    //From glUtils.js\n    make3x3 ()\n    {\n        if (this.elements.length != 4 || this.elements[0].length != 4)\n        {\n            return null;\n        }\n\n        return new Matrix([[this.elements[0][0], this.elements[0][1], this.elements[0][2]],\n                              [this.elements[1][0], this.elements[1][1], this.elements[1][2]],\n                              [this.elements[2][0], this.elements[2][1], this.elements[2][2]]]);\n    };\n}\n\nMatrix.I = function(n)\n{\n    var els = [], i = n, j;\n    while (i--)\n    {\n        j = n;\n        els[i] = [];\n        while (j--)\n        {\n            els[i][j] = (i === j) ? 1 : 0;\n        }\n    }\n    return new Matrix(els);\n};\n\nMatrix.Diagonal = function(elements)\n{\n    var i = elements.length;\n    var M = Matrix.I(i);\n    while (i--)\n    {\n        M.elements[i][i] = elements[i];\n    }\n    return M;\n};\n\nMatrix.Rotation = function(theta, a)\n{\n    if (!a)\n    {\n        return new Matrix([\n            [Math.cos(theta),  -Math.sin(theta)],\n            [Math.sin(theta),   Math.cos(theta)]\n        ]);\n    }\n    var axis = a.dup();\n    if (axis.elements.length !== 3)\n    {\n        return null;\n    }\n    var mod = axis.modulus();\n    var x = axis.elements[0]/mod, y = axis.elements[1]/mod, z = axis.elements[2]/mod;\n    var s = Math.sin(theta), c = Math.cos(theta), t = 1 - c;\n    // Formula derived here: http://www.gamedev.net/reference/articles/article1199.asp\n    // That proof rotates the co-ordinate system so theta becomes -theta and sin\n    // becomes -sin here.\n    return new Matrix([\n        [ t*x*x + c, t*x*y - s*z, t*x*z + s*y ],\n        [ t*x*y + s*z, t*y*y + c, t*y*z - s*x ],\n        [ t*x*z - s*y, t*y*z + s*x, t*z*z + c ]\n    ]);\n};\n\nMatrix.RotationX = function(t)\n{\n    var c = Math.cos(t), s = Math.sin(t);\n    return new Matrix([\n        [  1,  0,  0 ],\n        [  0,  c, -s ],\n        [  0,  s,  c ]\n    ]);\n};\nMatrix.RotationY = function(t)\n{\n    var c = Math.cos(t), s = Math.sin(t);\n    return new Matrix([\n        [  c,  0,  s ],\n        [  0,  1,  0 ],\n        [ -s,  0,  c ]\n    ]);\n};\nMatrix.RotationZ = function(t)\n{\n    var c = Math.cos(t), s = Math.sin(t);\n    return new Matrix([\n        [  c, -s,  0 ],\n        [  s,  c,  0 ],\n        [  0,  0,  1 ]\n    ]);\n};\n\nMatrix.Random = function(n, m)\n{\n    return Matrix.Zero(n, m).map(function()\n        {\n            return Math.random();\n        });\n};\n\n//From glUtils.js\nMatrix.Translation = function (v)\n{\n    if (v.elements.length == 2)\n    {\n        var r = Matrix.I(3);\n        r.elements[2][0] = v.elements[0];\n        r.elements[2][1] = v.elements[1];\n        return r;\n    }\n\n    if (v.elements.length == 3)\n    {\n        var r = Matrix.I(4);\n        r.elements[0][3] = v.elements[0];\n        r.elements[1][3] = v.elements[1];\n        r.elements[2][3] = v.elements[2];\n        return r;\n    }\n\n    throw \"Invalid length for Translation\";\n};\n\nMatrix.Zero = function(n, m)\n{\n    var els = [], i = n, j;\n    while (i--)\n    {\n        j = m;\n        els[i] = [];\n        while (j--)\n        {\n            els[i][j] = 0;\n        }\n    }\n    return new Matrix(els);\n};\n\nMatrix.prototype.toUpperTriangular = Matrix.prototype.toRightTriangular;\nMatrix.prototype.det = Matrix.prototype.determinant;\nMatrix.prototype.tr = Matrix.prototype.trace;\nMatrix.prototype.rk = Matrix.prototype.rank;\nMatrix.prototype.inv = Matrix.prototype.inverse;\nMatrix.prototype.x = Matrix.prototype.multiply;"]}