{"version":3,"sources":["../src/Line.js"],"names":["Line","anchor","direction","setVectors","line","isParallelTo","contains","vector","V","elements","obj","normal","start","end","theta","angleFrom","Math","abs","PRECISION","PI","distanceFrom","N","cross","toUnitVector","A","B","P","D","PA1","PA2","PA3","modPA","sqrt","cosTheta","sin2","dist","point","plane","intersects","intersectionWith","X","Q","Y","X1","X2","X3","Y1","Y2","Y3","PsubQ1","PsubQ2","PsubQ3","XdotQsubP","YdotPsubQ","XdotX","YdotY","XdotY","k","Vector","pointClosestTo","E","D1","D2","D3","E1","E2","E3","x","y","z","Plane","A1","A2","A3","modulus","t","to3D","R","Matrix","Rotation","C","C1","C2","C3","newA","reflectionIn","AD1","AD2","AD3","newD","rotate","length","push","mod","Zero","i","j","Z"],"mappings":"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","file":"Line.js","sourcesContent":["\"use strict\";\n\nimport { PRECISION } from \"./PRECISION\";\nimport { Vector } from \"./Vector\";\nimport { Matrix } from \"./Matrix\";\nimport { Plane } from \"./Plane\";\n\nexport class Line\n{\n    constructor (anchor, direction)\n    {\n        this.setVectors(anchor, direction);\n    }\n\n    eql (line)\n    {\n        return (this.isParallelTo(line) && this.contains(line.anchor));\n    }\n\n    dup ()\n    {\n        return new Line(this.anchor, this.direction);\n    }\n\n    translate (vector)\n    {\n        var V = vector.elements || vector;\n        return new Line([\n            this.anchor.elements[0] + V[0],\n            this.anchor.elements[1] + V[1],\n            this.anchor.elements[2] + (V[2] || 0)\n        ], this.direction);\n    }\n\n    isParallelTo (obj)\n    {\n        if (obj.normal || (obj.start && obj.end))\n        {\n            return obj.isParallelTo(this);\n        }\n        var theta = this.direction.angleFrom(obj.direction);\n        return (Math.abs(theta) <= PRECISION || Math.abs(theta - Math.PI) <= PRECISION);\n    }\n\n    distanceFrom (obj)\n    {\n        if (obj.normal || (obj.start && obj.end))\n        {\n            return obj.distanceFrom(this);\n        }\n        if (obj.direction)\n        {\n            // obj is a line\n            if (this.isParallelTo(obj))\n            {\n                return this.distanceFrom(obj.anchor);\n            }\n            var N = this.direction.cross(obj.direction).toUnitVector().elements;\n            var A = this.anchor.elements, B = obj.anchor.elements;\n            return Math.abs((A[0] - B[0]) * N[0] + (A[1] - B[1]) * N[1] + (A[2] - B[2]) * N[2]);\n        }\n        else\n        {\n            // obj is a point\n            var P = obj.elements || obj;\n            var A = this.anchor.elements, D = this.direction.elements;\n            var PA1 = P[0] - A[0], PA2 = P[1] - A[1], PA3 = (P[2] || 0) - A[2];\n            var modPA = Math.sqrt(PA1*PA1 + PA2*PA2 + PA3*PA3);\n            if (modPA === 0)\n            {\n                return 0;\n            }\n            // Assumes direction vector is normalized\n            var cosTheta = (PA1 * D[0] + PA2 * D[1] + PA3 * D[2]) / modPA;\n            var sin2 = 1 - cosTheta*cosTheta;\n            return Math.abs(modPA * Math.sqrt(sin2 < 0 ? 0 : sin2));\n        }\n    }\n\n    contains (obj)\n    {\n        if (obj.start && obj.end)\n        {\n            return this.contains(obj.start) && this.contains(obj.end);\n        }\n        var dist = this.distanceFrom(obj);\n        return (dist !== null && dist <= PRECISION);\n    }\n\n    positionOf (point)\n    {\n        if (!this.contains(point))\n        {\n            return null;\n        }\n        var P = point.elements || point;\n        var A = this.anchor.elements, D = this.direction.elements;\n        return (P[0] - A[0]) * D[0] + (P[1] - A[1]) * D[1] + ((P[2] || 0) - A[2]) * D[2];\n    }\n\n    liesIn (plane)\n    {\n        return plane.contains(this);\n    }\n\n    intersects (obj)\n    {\n        if (obj.normal)\n        {\n            return obj.intersects(this);\n        }\n        return (!this.isParallelTo(obj) && this.distanceFrom(obj) <= PRECISION);\n    }\n\n    intersectionWith (obj)\n    {\n        if (obj.normal || (obj.start && obj.end))\n        {\n            return obj.intersectionWith(this);\n        }\n        if (!this.intersects(obj))\n        {\n            return null;\n        }\n        var P = this.anchor.elements,\n            X = this.direction.elements,\n            Q = obj.anchor.elements,\n            Y = obj.direction.elements;\n        var X1 = X[0], X2 = X[1], X3 = X[2], Y1 = Y[0], Y2 = Y[1], Y3 = Y[2];\n        var PsubQ1 = P[0] - Q[0], PsubQ2 = P[1] - Q[1], PsubQ3 = P[2] - Q[2];\n        var XdotQsubP = - X1*PsubQ1 - X2*PsubQ2 - X3*PsubQ3;\n        var YdotPsubQ = Y1*PsubQ1 + Y2*PsubQ2 + Y3*PsubQ3;\n        var XdotX = X1*X1 + X2*X2 + X3*X3;\n        var YdotY = Y1*Y1 + Y2*Y2 + Y3*Y3;\n        var XdotY = X1*Y1 + X2*Y2 + X3*Y3;\n        var k = (XdotQsubP * YdotY / XdotX + XdotY * YdotPsubQ) / (YdotY - XdotY * XdotY);\n        return new Vector([P[0] + k*X1, P[1] + k*X2, P[2] + k*X3]);\n    }\n\n    pointClosestTo (obj)\n    {\n        if (obj.start && obj.end)\n        {\n            // obj is a line segment\n            var P = obj.pointClosestTo(this);\n            return (P === null) ? null : this.pointClosestTo(P);\n        }\n        else if (obj.direction)\n        {\n            // obj is a line\n            if (this.intersects(obj))\n            {\n                return this.intersectionWith(obj);\n            }\n            if (this.isParallelTo(obj))\n            {\n                return null;\n            }\n            var D = this.direction.elements, E = obj.direction.elements;\n            var D1 = D[0], D2 = D[1], D3 = D[2], E1 = E[0], E2 = E[1], E3 = E[2];\n            // Create plane containing obj and the shared normal and intersect this\n            // with it Thank you:\n            // http://www.cgafaq.info/wiki/Line-line_distance\n            var x = (D3 * E1 - D1 * E3), y = (D1 * E2 - D2 * E1), z = (D2 * E3 - D3 * E2);\n            var N = [x * E3 - y * E2, y * E1 - z * E3, z * E2 - x * E1];\n            var P = new Plane(obj.anchor, N);\n            return P.intersectionWith(this);\n        }\n        else\n        {\n            // obj is a point\n            var P = obj.elements || obj;\n            if (this.contains(P))\n            {\n                return new Vector(P);\n            }\n            var A = this.anchor.elements, D = this.direction.elements;\n            var D1 = D[0], D2 = D[1], D3 = D[2], A1 = A[0], A2 = A[1], A3 = A[2];\n            var x = D1 * (P[1]-A2) - D2 * (P[0]-A1), y = D2 * ((P[2] || 0) - A3) - D3 * (P[1]-A2),\n                    z = D3 * (P[0]-A1) - D1 * ((P[2] || 0) - A3);\n            var V = new Vector([D2 * x - D3 * z, D3 * y - D1 * x, D1 * z - D2 * y]);\n            var k = this.distanceFrom(P) / V.modulus();\n            return new Vector([\n                P[0] + V.elements[0] * k,\n                P[1] + V.elements[1] * k,\n                (P[2] || 0) + V.elements[2] * k\n            ]);\n        }\n    }\n\n    // Returns a copy of the line rotated by t radians about the given line. Works\n    // by finding the argument's closest point to this line's anchor point (call\n    // this C) and rotating the anchor about C. Also rotates the line's direction\n    // about the argument's. Be careful with this - the rotation axis' direction\n    // affects the outcome!\n    rotate (t, line)\n    {\n        // If we're working in 2D\n        if (typeof(line.direction) === 'undefined')\n        {\n            line = new Line(line.to3D(), Vector.k);\n        }\n        var R = Matrix.Rotation(t, line.direction).elements;\n        var C = line.pointClosestTo(this.anchor).elements;\n        var A = this.anchor.elements, D = this.direction.elements;\n        var C1 = C[0], C2 = C[1], C3 = C[2], A1 = A[0], A2 = A[1], A3 = A[2];\n        var x = A1 - C1, y = A2 - C2, z = A3 - C3;\n        return new Line\n        (\n            [\n                C1 + R[0][0] * x + R[0][1] * y + R[0][2] * z,\n                C2 + R[1][0] * x + R[1][1] * y + R[1][2] * z,\n                C3 + R[2][0] * x + R[2][1] * y + R[2][2] * z\n            ],\n            [\n                R[0][0] * D[0] + R[0][1] * D[1] + R[0][2] * D[2],\n                R[1][0] * D[0] + R[1][1] * D[1] + R[1][2] * D[2],\n                R[2][0] * D[0] + R[2][1] * D[1] + R[2][2] * D[2]\n            ]\n        );\n    }\n\n    reverse ()\n    {\n        return new Line(this.anchor, this.direction.x(-1));\n    }\n\n    reflectionIn (obj)\n    {\n        if (obj.normal)\n        {\n            // obj is a plane\n            var A = this.anchor.elements, D = this.direction.elements;\n            var A1 = A[0], A2 = A[1], A3 = A[2], D1 = D[0], D2 = D[1], D3 = D[2];\n            var newA = this.anchor.reflectionIn(obj).elements;\n            // Add the line's direction vector to its anchor, then mirror that in the plane\n            var AD1 = A1 + D1, AD2 = A2 + D2, AD3 = A3 + D3;\n            var Q = obj.pointClosestTo([AD1, AD2, AD3]).elements;\n            var newD = [Q[0] + (Q[0] - AD1) - newA[0], Q[1] + (Q[1] - AD2) - newA[1], Q[2] + (Q[2] - AD3) - newA[2]];\n            return new Line(newA, newD);\n        }\n        else if (obj.direction)\n        {\n            // obj is a line - reflection obtained by rotating PI radians about obj\n            return this.rotate(Math.PI, obj);\n        }\n        else\n        {\n            // obj is a point - just reflect the line's anchor in it\n            var P = obj.elements || obj;\n            return new Line(this.anchor.reflectionIn([P[0], P[1], (P[2] || 0)]), this.direction);\n        }\n    }\n\n    setVectors (anchor, direction)\n    {\n        // Need to do this so that line's properties are not references to the\n        // arguments passed in\n        anchor = new Vector(anchor);\n        direction = new Vector(direction);\n        if (anchor.elements.length === 2)\n        {\n            anchor.elements.push(0);\n        }\n        if (direction.elements.length === 2)\n        {\n            direction.elements.push(0);\n        }\n        if (anchor.elements.length > 3 || direction.elements.length > 3)\n        {\n            return null;\n        }\n        var mod = direction.modulus();\n        if (mod === 0)\n        {\n            return null;\n        }\n        this.anchor = anchor;\n        this.direction = new Vector([\n            direction.elements[0] / mod,\n            direction.elements[1] / mod,\n            direction.elements[2] / mod\n        ]);\n        return this;\n    }\n}\n\nLine.X = new Line(Vector.Zero(3), Vector.i);\nLine.Y = new Line(Vector.Zero(3), Vector.j);\nLine.Z = new Line(Vector.Zero(3), Vector.k);"]}