{"version":3,"sources":["../src/LinkedList.js"],"names":["LinkedList","length","first","last","fn","context","node","n","i","call","next","Math","floor","random","at","arr","push","data","prototype","each","forEach"],"mappings":"AAAA;;;;;;;;;;IAEaA,U,WAAAA,U;AAET,0BACA;AAAA;;AACI,aAAKC,MAAL,GAAa,CAAb;AACA,aAAKC,KAAL,GAAY,IAAZ;AACA,aAAKC,IAAL,GAAW,IAAX;AACH;;;;gCAEQC,E,EAAIC,O,EACb;AACI,gBAAIC,OAAO,KAAKJ,KAAhB;AAAA,gBAAuBK,IAAI,KAAKN,MAAhC;AACA,iBAAK,IAAIO,IAAI,CAAb,EAAgBA,IAAID,CAApB,EAAuBC,GAAvB,EACA;AACIJ,mBAAGK,IAAH,CAAQJ,OAAR,EAAiBC,IAAjB,EAAuBE,CAAvB;AACAF,uBAAOA,KAAKI,IAAZ;AACH;AACJ;;;2BAEGF,C,EACJ;AACI,gBAAI,EAAEA,KAAK,CAAL,IAAUA,IAAI,KAAKP,MAArB,CAAJ,EACA;AACI,uBAAO,IAAP;AACH;AACD,gBAAIK,OAAO,KAAKJ,KAAhB;AACA,mBAAOM,GAAP,EACA;AACIF,uBAAOA,KAAKI,IAAZ;AACH;AACD,mBAAOJ,IAAP;AACH;;;qCAGD;AACI,gBAAIC,IAAII,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,KAAKZ,MAAhC,CAAR;AACA,mBAAO,KAAKa,EAAL,CAAQP,CAAR,CAAP;AACH;;;kCAGD;AACI,gBAAIQ,MAAM,EAAV;AAAA,gBAAcT,OAAO,KAAKJ,KAA1B;AAAA,gBAAiCK,IAAI,KAAKN,MAA1C;AACA,mBAAOM,GAAP,EACA;AACIQ,oBAAIC,IAAJ,CAASV,KAAKW,IAAL,IAAaX,IAAtB;AACAA,uBAAOA,KAAKI,IAAZ;AACH;AACD,mBAAOK,GAAP;AACH;;;;;;AAGLf,WAAWkB,SAAX,CAAqBC,IAArB,GAA4BnB,WAAWkB,SAAX,CAAqBE,OAAjD","file":"LinkedList.js","sourcesContent":["\"use strict\";\n\nexport class LinkedList\n{\n    constructor ()\n    {\n        this.length= 0;\n        this.first= null;\n        this.last= null;\n    }\n\n    forEach (fn, context)\n    {\n        var node = this.first, n = this.length;\n        for (var i = 0; i < n; i++)\n        {\n            fn.call(context, node, i);\n            node = node.next;\n        }\n    }\n\n    at (i)\n    {\n        if (!(i >= 0 && i < this.length))\n        {\n            return null;\n        }\n        var node = this.first;\n        while (i--)\n        {\n            node = node.next;\n        }\n        return node;\n    }\n\n    randomNode ()\n    {\n        var n = Math.floor(Math.random() * this.length);\n        return this.at(n);\n    }\n\n    toArray ()\n    {\n        var arr = [], node = this.first, n = this.length;\n        while (n--)\n        {\n            arr.push(node.data || node);\n            node = node.next;\n        }\n        return arr;\n    }\n}\n\nLinkedList.prototype.each = LinkedList.prototype.forEach;"]}